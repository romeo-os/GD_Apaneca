@model GestionDocumentalAdmin.Models.Models.Documentos

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "modal-form", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationMessage("erro", new { @class = "text-danger" })

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
    <div class="form-group">
        <div class="col-md-12 bg-light">
            <label for="file-upload" class="icon-folder-open control-label">Seleccione un archivo</label>
            <input type="file" class="form-control-file" id="file-upload" name="file" onchange='cambiar()'>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.nombreDocumentos, "Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.nombreDocumentos, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombreDocumentos, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idTipoDocumento, "Tipo", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.DropDownList("idTipoDocumento", ViewData["tipoDoc"] as SelectList, "Seleccione", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idTipoDocumento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.HiddenFor(model => model.idCarpeta, new { @Value = @ViewData["id"] });
        @Html.ValidationMessageFor(model => model.idCarpeta, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-primary" />
        </div>
    </div>
</div>
}
